const { COLLECTION_RETRIEVAL_COUNTER, headers, OPENSEA_API_BASE_URL } = require('./constants');

const getEvents = async (cursor) => {
  const body = `{\"id\":\"EventHistoryQuery\",\"query\":\"query EventHistoryQuery(\\n  $archetype: ArchetypeInputType\\n  $bundle: BundleSlug\\n  $collections: [CollectionSlug!]\\n  $categories: [CollectionSlug!]\\n  $chains: [ChainScalar!]\\n  $eventTypes: [EventType!]\\n  $cursor: String\\n  $count: Int = 16\\n  $showAll: Boolean = false\\n  $identity: IdentityInputType\\n) {\\n  ...EventHistory_data_L1XK6\\n}\\n\\nfragment AccountLink_data on AccountType {\\n  address\\n  config\\n  isCompromised\\n  user {\\n    publicUsername\\n    id\\n  }\\n  displayName\\n  ...ProfileImage_data\\n  ...wallet_accountKey\\n  ...accounts_url\\n}\\n\\nfragment AssetMediaAnimation_asset on AssetType {\\n  ...AssetMediaImage_asset\\n}\\n\\nfragment AssetMediaAudio_asset on AssetType {\\n  backgroundColor\\n  ...AssetMediaImage_asset\\n}\\n\\nfragment AssetMediaContainer_asset_2V84VL on AssetType {\\n  backgroundColor\\n  ...AssetMediaEditions_asset_2V84VL\\n}\\n\\nfragment AssetMediaEditions_asset_2V84VL on AssetType {\\n  decimals\\n}\\n\\nfragment AssetMediaImage_asset on AssetType {\\n  backgroundColor\\n  imageUrl\\n  collection {\\n    displayData {\\n      cardDisplayStyle\\n    }\\n    id\\n  }\\n}\\n\\nfragment AssetMediaPlaceholderImage_asset on AssetType {\\n  collection {\\n    displayData {\\n      cardDisplayStyle\\n    }\\n    id\\n  }\\n}\\n\\nfragment AssetMediaVideo_asset on AssetType {\\n  backgroundColor\\n  ...AssetMediaImage_asset\\n}\\n\\nfragment AssetMediaWebgl_asset on AssetType {\\n  backgroundColor\\n  ...AssetMediaImage_asset\\n}\\n\\nfragment AssetMedia_asset on AssetType {\\n  animationUrl\\n  displayImageUrl\\n  imageUrl\\n  isDelisted\\n  ...AssetMediaAnimation_asset\\n  ...AssetMediaAudio_asset\\n  ...AssetMediaContainer_asset_2V84VL\\n  ...AssetMediaImage_asset\\n  ...AssetMediaPlaceholderImage_asset\\n  ...AssetMediaVideo_asset\\n  ...AssetMediaWebgl_asset\\n}\\n\\nfragment CollectionCell_collection on CollectionType {\\n  name\\n  imageUrl\\n  isVerified\\n  ...collection_url\\n}\\n\\nfragment CollectionCell_trait on TraitType {\\n  traitType\\n  value\\n}\\n\\nfragment CollectionLink_assetContract on AssetContractType {\\n  address\\n  blockExplorerLink\\n}\\n\\nfragment CollectionLink_collection on CollectionType {\\n  name\\n  verificationStatus\\n  ...collection_url\\n}\\n\\nfragment EventHistory_data_L1XK6 on Query {\\n  assetEvents(after: $cursor, bundle: $bundle, archetype: $archetype, first: $count, categories: $categories, collections: $collections, chains: $chains, eventTypes: $eventTypes, identity: $identity, includeHidden: true) {\\n    edges {\\n      node {\\n        collection {\\n          ...CollectionCell_collection\\n          id\\n        }\\n        traitCriteria {\\n          ...CollectionCell_trait\\n          id\\n        }\\n        itemQuantity\\n        item @include(if: $showAll) {\\n          __typename\\n          relayId\\n          verificationStatus\\n          collection {\\n            ...CollectionLink_collection\\n            id\\n          }\\n          ...ItemCell_data\\n          ...item_url\\n          ... on AssetType {\\n            assetContract {\\n              ...CollectionLink_assetContract\\n              id\\n            }\\n          }\\n          ... on Node {\\n            __isNode: __typename\\n            id\\n          }\\n        }\\n        relayId\\n        eventTimestamp\\n        eventType\\n        orderExpired\\n        customEventName\\n        ...utilsAssetEventLabel\\n        creatorFee {\\n          unit\\n        }\\n        devFeePaymentEvent {\\n          ...EventTimestamp_data\\n          id\\n        }\\n        fromAccount {\\n          address\\n          ...AccountLink_data\\n          id\\n        }\\n        perUnitPrice {\\n          unit\\n          eth\\n          usd\\n        }\\n        endingPriceType {\\n          unit\\n        }\\n        payment {\\n          ...TokenPricePayment\\n          id\\n        }\\n        seller {\\n          ...AccountLink_data\\n          id\\n        }\\n        toAccount {\\n          ...AccountLink_data\\n          id\\n        }\\n        winnerAccount {\\n          ...AccountLink_data\\n          id\\n        }\\n        ...EventTimestamp_data\\n        id\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n}\\n\\nfragment EventTimestamp_data on AssetEventType {\\n  eventTimestamp\\n  transaction {\\n    blockExplorerLink\\n    id\\n  }\\n}\\n\\nfragment ItemCell_data on ItemType {\\n  __isItemType: __typename\\n  __typename\\n  name\\n  collection {\\n    name\\n    id\\n  }\\n  ...item_url\\n  ... on AssetType {\\n    ...AssetMedia_asset\\n  }\\n  ... on AssetBundleType {\\n    assetQuantities(first: 2) {\\n      edges {\\n        node {\\n          asset {\\n            name\\n            ...AssetMedia_asset\\n            id\\n          }\\n          relayId\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nfragment ProfileImage_data on AccountType {\\n  imageUrl\\n}\\n\\nfragment TokenPricePayment on PaymentAssetType {\\n  symbol\\n  chain {\\n    identifier\\n  }\\n  asset {\\n    imageUrl\\n    assetContract {\\n      blockExplorerLink\\n      id\\n    }\\n    id\\n  }\\n}\\n\\nfragment accounts_url on AccountType {\\n  address\\n  user {\\n    publicUsername\\n    id\\n  }\\n}\\n\\nfragment asset_url on AssetType {\\n  assetContract {\\n    address\\n    id\\n  }\\n  tokenId\\n  chain {\\n    identifier\\n  }\\n}\\n\\nfragment bundle_url on AssetBundleType {\\n  slug\\n  chain {\\n    identifier\\n  }\\n}\\n\\nfragment collection_url on CollectionType {\\n  slug\\n  isCategory\\n}\\n\\nfragment item_url on ItemType {\\n  __isItemType: __typename\\n  __typename\\n  ... on AssetType {\\n    ...asset_url\\n  }\\n  ... on AssetBundleType {\\n    ...bundle_url\\n  }\\n}\\n\\nfragment utilsAssetEventLabel on AssetEventType {\\n  isMint\\n  isAirdrop\\n  eventType\\n}\\n\\nfragment wallet_accountKey on AccountType {\\n  address\\n}\\n\",\"variables\":{\"archetype\":null,\"bundle\":null,\"collections\":[],\"categories\":null,\"chains\":[\"ETHEREUM\"],\"eventTypes\":[\"AUCTION_SUCCESSFUL\"],\"cursor\": ${
    cursor ? `\"${cursor}\"` : null
  },\"count\": ${COLLECTION_RETRIEVAL_COUNTER},\"showAll\":true,\"identity\":null}}`;
  return fetch(OPENSEA_API_BASE_URL, {
    method: 'POST',
    body,
    headers: {
      ...headers,
      'x-signed-query':
        '4870373aefa67d877749b2f3c6af48d045ec72bf67182c352eeb3896c39f7403',
    },
  })
    .then(res => res.json())
    .then(res => res.data.assetEvents);
};

module.exports = {
  getEvents,
};
